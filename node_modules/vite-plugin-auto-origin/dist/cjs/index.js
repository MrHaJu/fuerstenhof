"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vite_1 = require("vite");
const originPlaceholder = "__VITE_AUTO_ORIGIN__";
let requestOrigin = "";
function detectProtocol(req, server) {
    if (req.headers["x-forwarded-proto"]) {
        return req.headers["x-forwarded-proto"];
    }
    if (req.headers["x-forwarded-ssl"]) {
        return req.headers["x-forwarded-ssl"] === "on" ? "https" : "http";
    }
    return server.config.server.https ? "https" : "http";
}
function detectHost(req) {
    return (req.headers["x-forwarded-host"] ||
        req.headers.host ||
        "localhost");
}
function replaceAll(find, replace, subject) {
    return subject.split(find).join(replace);
}
function configureServer(server) {
    const logger = (0, vite_1.createLogger)("info", { prefix: "[plugin-auto-origin]" });
    server.middlewares.use((req, _res, next) => {
        const prevRequestOrigin = requestOrigin;
        requestOrigin = detectProtocol(req, server) + "://" + detectHost(req);
        if (prevRequestOrigin !== requestOrigin) {
            logger.info(`Origin auto-detected: ${requestOrigin}`, {
                timestamp: true,
            });
        }
        next();
    });
}
function transform(code) {
    return replaceAll(originPlaceholder, requestOrigin, code);
}
function autoOrigin() {
    return {
        name: "vite-plugin-auto-origin",
        apply: "serve",
        config: () => ({
            server: {
                origin: originPlaceholder,
            },
        }),
        configureServer,
        transform,
    };
}
exports.default = autoOrigin;
//# sourceMappingURL=index.js.map